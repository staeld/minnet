#!/usr/bin/env lua
-- config.lua.sample - config file for minnet
-- Copyright St√¶ld Lakorv, 2010-2012 <staeld@illumine.ch>
-- This file is part of Minnet.
-- Minnet is released under the GPLv3 - see ../COPYING

-- This config file should be complete and set according to examples.
--+ Any inconsistent or wrongly set value may cause unwanted behaviour,
--+ potentially posing a threat to your system's security and stability.
--
-- Note that few, if any, of these values are actually validated at runtime.
--+ This means that the bot does not necessarily detect a faulty value.
--+ Doing so is your own responsibility.

-- Directory for logfiles
logdir = os.getenv("HOME") .. "/.minnetlogs"

-- Main static info for the bot, including networks
bot = {
    nick  = "Minnet",   -- Nickname (nick!uname@host)
    uname = "Minnet",   -- Username
    rname = "Minnet",   -- Realname (shows in whois)

    --[[ Not yet implemented
    -- Do you want Minnet to be provide IRC Services?
    ownServices = {
        enabled = false,
        oline   = {
            username = "",  -- Set this if not equal to bot's nick
            passwd = "someO-LinePassword"
        },
        nickserv= {
            requireIdent = false,   -- Require that users identify with us?
        },
    }, --]]

    -- Define known networks
    -- { name = netname, port, secure = bool for ssl, c = { "#channel", "#channel2" }, modes = modes to add for self on connect, default = bool }
    nets  = {
        {
            name    = "dummynet",
            addr    = "irc.dummynet.org",
            port    = "6667",   -- Optional, defaults to 6667
            secure  = false,    -- Optional, defaults to false [enables ssl]
            c       = { "#channelA", "#Chan2" },
            modes   = "pxB",
            -- Information needed to cooperate with existing Services:
            services= {
                hostmask = "services.dummynet.org", -- Empty disables hostcheck
                nickserv = { enabled = true, servnick = "NickServ",
                    passwd = "p4ssw0rd" }
            }
            default = true,     -- Connect to this if no network specified
        },
        {
            name    = "net2",
            addr    = "irc.net2.org",
            port    = "6697",   -- SSL
            secure  = true,
            c       = { "#talk", "#somechan" },
            modes   = "iB",
            services= {
                hostmask = "",
                nickserv = { enabled = false }
            }
        },
    },
    mods = {
        -- Modules to load/use at startup
        load = {
            "cmdarray", "cmdvocab", "db", "idb", "hooks", "ctcp",
            "time", "sdb", "rss"
        },
        -- Where are modules stored
        path = "minnet/",
        loaded = {}
    },
    -- Access levels; owner is obligatory and must be lowest number
    levels = {
        owner   = 0,
        admin   = 1,
        oper    = 2,
        user    = 9
    },
    smiles = {
        { text = "sad",     face = ":(" },
        { text = "happy",   face = ":D" },
        { text = "angry",   face = ">:|"},
        { text = "annoyed", face = ":|" },
        { text = "annoying",face = ">:)"},
        { text = "dumb",    face = ":B" },
        { text = "silly",   face = ":B" },
        { text = "stupid",  face = ":B" },
        { text = "sexy",    face = ";)" },
        { text = "smart",   face = "8)" },
    },

    -- The following empty arrays can simply be left as they are;
    --+ they will be populated during runtime, and are only left here for
    --+ the ability to hardcode certain kinds of behaviour for a given net
    --+ or channel.

    -- disabled = { channame = true, chan2 = false };
    -- this is used during runtime, but can be predefined for special needs
    disabled = {},
    -- ignore = { chan = { "nick/$nick", "user/$pattern", "host/$pattern" } }
    -- used for ignoring people, per-channel or per-net (_NETNAME)
    ignore = {},
    -- disfuncs = { channame = { "funcname", "func2" }, _netname = { "f3" } }
    -- used for disabling a certain function per channel or per net
    disfuncs = {},
}
msg = {
    noargs  = "invalid arguments specified. See --help",
    notowner= "Hey, I'm not taking commands from you.",
    notauth = "Hey, you're not authorised for this operation!",
    bye     = "Okay, bye!",
    shutup  = "Fine, I'll just shut up.",
    talk    = "By time.",
    leaving = "Minnet leaving..",
    quitting= "Minnet quitting..",
    joining = "flaps off to " -- Is an action, will be merged with channel name
}

--[[ ! Do not edit below this level
    unless you know what you're doing --]]

-- Logging levels
levels = {
    error   = 0,
    warn    = 1,
    info    = 3,    -- The default value; config must have this!
    trivial = 5,
    debug   = 9,
    internal= 99,
}
verbosity = levels["info"]  -- Set initial value

ctcp  = {
    active = {
        version = {},
        source  = {},
        time    = {},
    }
}

cprefix    = "[#&]"
cname_patt = "[^%s%.,%?!]+"
nick_patt  = "[^%s%.,%?!]+"

otk   = {}
logs  = {}
vchan = ""

-- EOF
